name: On Prerelease
on:
  release:
    types: [prereleased]

env:
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
  KEYSTORE_GIT_REPO: ${{ secrets.KEYSTORE_GIT_REPO }}
  KEYSTORE_ACCESS_TOKEN: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}

jobs:
  lint_job:
    name: Lint
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Run Debug Lint
        run: ./gradlew lintDebug

      - name: Upload Lint Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: lint-reports
          path: '**/build/reports/lint-results-*'

  test_job:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Run Debug Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Upload Test Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: '**/build/reports/tests/'

  build_job:
    name: Build
    needs: [ lint_job, test_job ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with: {java-version: 1.8}

      - name: Save TAG to environment
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Print TAG
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.KEYSTORE_GIT_REPO }}
          token: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
          path: app/keystore
          ref: master

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Build Bundle Release
        run: ./gradlew bundleRelease

      - name: Build APK Release
        run: ./gradlew assembleRelease

      - name: Upload Bundle to Release
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
        with:
          args: app/build/outputs/bundle/release/**.aab

      - name: Upload APK to Release
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
        with:
          args: app/build/outputs/apk/release/**.apk

      - name: Upload to Google Play Internal
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: ${{ secrets.APP_PACKAGE_NAME }}
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          # whatsNewDirectory: distribution/whatsnew
          # mappingFile: app/build/outputs/mapping/release/mapping.txt


#      - name: Upload AAB
#        uses: actions/upload-artifact@v2
#        with:
#          name: app-release.aab
#          path: 'app/build/outputs/bundle/**/**.aab'
